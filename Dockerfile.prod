# Base image - Ubuntu 24.04 (noble)
FROM ubuntu:noble AS build

# Enable bash pipefail for better error handling in shell scripts
SHELL ["/bin/bash", "-eo", "pipefail", "-c"]

# Configure Python and UV package manager environment
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONIOENCODING=utf-8 \
    UV_LINK_MODE=copy \
    UV_COMPILE_BYTECODE=1 \
    UV_PYTHON_DOWNLOADS=never \
    UV_PYTHON=python3.12 \
    UV_PROJECT_ENVIRONMENT=/app \
    PROMETHEUS_MULTIPROC_DIR=/tmp/prometheus_multiproc_dir

# Install system dependencies and dev tools
RUN <<EOT
apt-get update -qy && \
apt-get install -qyy \
    -o APT::Install-Recommends=false \
    -o APT::Install-Suggests=false \
    build-essential \
    ca-certificates \
    python3-setuptools \
    python3.12-dev && \
apt-get clean && \
rm -rf /var/lib/apt/lists/*
EOT

# Install UV package manager
COPY --from=ghcr.io/astral-sh/uv:latest /uv /usr/local/bin/uv

# Copy dependency files for package installation
COPY pyproject.toml uv.lock /_lock/
COPY src/ /src/
WORKDIR /src
COPY . .

# Install Python dependencies using UV with build cache
RUN --mount=type=cache,target=/root/.cache \
    cd /_lock && \
    uv sync \
        --locked \
        --no-dev \
        --no-install-project

# Set up non-root user and required directories
RUN useradd -m -d /src -s /bin/bash app && \
    chown -R app:app /src && \
    chmod +x entrypoints/* && \
    rm -rf /tmp/prometheus_multiproc_dir && \
    mkdir -p /tmp/prometheus_multiproc_dir && \
    chown -R app:app /tmp/prometheus_multiproc_dir

# Switch to non-root user for security
USER app